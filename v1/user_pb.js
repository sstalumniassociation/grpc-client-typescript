// @generated by protoc-gen-es v1.7.2
// @generated from file Protos/v1/user.proto (package user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum user.v1.Membership
 */
export const Membership = proto3.makeEnum(
  "user.v1.Membership",
  [
    {no: 0, name: "Exco"},
    {no: 1, name: "Associate"},
    {no: 2, name: "Affiliate"},
    {no: 3, name: "Ordinary"},
    {no: 4, name: "Revoked"},
  ],
);

/**
 * @generated from enum user.v1.ServiceAccountType
 */
export const ServiceAccountType = proto3.makeEnum(
  "user.v1.ServiceAccountType",
  [
    {no: 0, name: "GuardHouse"},
  ],
);

/**
 * @generated from message user.v1.User
 */
export const User = proto3.makeMessageType(
  "user.v1.User",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "firebase_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 100, name: "member", kind: "message", T: Member, oneof: "user_type" },
    { no: 101, name: "employee", kind: "message", T: Employee, oneof: "user_type" },
    { no: 102, name: "service_account", kind: "message", T: ServiceAccount, oneof: "user_type" },
    { no: 103, name: "system_admin", kind: "message", T: SystemAdmin, oneof: "user_type" },
  ],
);

/**
 * @generated from message user.v1.Member
 */
export const Member = proto3.makeMessageType(
  "user.v1.Member",
  () => [
    { no: 1, name: "membership", kind: "enum", T: proto3.getEnumType(Membership) },
    { no: 2, name: "member_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "alumni_member", kind: "message", T: AlumniMember, oneof: "member_type" },
    { no: 4, name: "employee_member", kind: "message", T: EmployeeMember, oneof: "member_type" },
  ],
);

/**
 * @generated from message user.v1.AlumniMember
 */
export const AlumniMember = proto3.makeMessageType(
  "user.v1.AlumniMember",
  () => [
    { no: 1, name: "graduation_year", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message user.v1.EmployeeMember
 */
export const EmployeeMember = proto3.makeMessageType(
  "user.v1.EmployeeMember",
  () => [
    { no: 1, name: "graduation_year", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message user.v1.ServiceAccount
 */
export const ServiceAccount = proto3.makeMessageType(
  "user.v1.ServiceAccount",
  () => [
    { no: 1, name: "service_account_type", kind: "enum", T: proto3.getEnumType(ServiceAccountType) },
  ],
);

/**
 * @generated from message user.v1.SystemAdmin
 */
export const SystemAdmin = proto3.makeMessageType(
  "user.v1.SystemAdmin",
  [],
);

/**
 * @generated from message user.v1.Employee
 */
export const Employee = proto3.makeMessageType(
  "user.v1.Employee",
  [],
);

/**
 * @generated from message user.v1.ListUsersRequest
 */
export const ListUsersRequest = proto3.makeMessageType(
  "user.v1.ListUsersRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message user.v1.ListUsersResponse
 */
export const ListUsersResponse = proto3.makeMessageType(
  "user.v1.ListUsersResponse",
  () => [
    { no: 1, name: "users", kind: "message", T: User, repeated: true },
  ],
);

/**
 * @generated from message user.v1.GetUserRequest
 */
export const GetUserRequest = proto3.makeMessageType(
  "user.v1.GetUserRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message user.v1.BindUserRequest
 */
export const BindUserRequest = proto3.makeMessageType(
  "user.v1.BindUserRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message user.v1.CreateUserRequest
 */
export const CreateUserRequest = proto3.makeMessageType(
  "user.v1.CreateUserRequest",
  () => [
    { no: 1, name: "user", kind: "message", T: User },
  ],
);

/**
 * @generated from message user.v1.BatchCreateUsersRequest
 */
export const BatchCreateUsersRequest = proto3.makeMessageType(
  "user.v1.BatchCreateUsersRequest",
  () => [
    { no: 1, name: "requests", kind: "message", T: CreateUserRequest, repeated: true },
  ],
);

/**
 * @generated from message user.v1.BatchCreateUsersResponse
 */
export const BatchCreateUsersResponse = proto3.makeMessageType(
  "user.v1.BatchCreateUsersResponse",
  () => [
    { no: 1, name: "users", kind: "message", T: User, repeated: true },
  ],
);

/**
 * @generated from message user.v1.UpdateUserRequest
 */
export const UpdateUserRequest = proto3.makeMessageType(
  "user.v1.UpdateUserRequest",
  () => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message user.v1.DeleteUserRequest
 */
export const DeleteUserRequest = proto3.makeMessageType(
  "user.v1.DeleteUserRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

